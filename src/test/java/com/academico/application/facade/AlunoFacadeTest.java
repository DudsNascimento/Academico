/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.academico.domain.service;

import java.util.Optional;
import java.util.List;
import java.util.ArrayList;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mockito;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import com.academico.domain.service.AlunoServiceInterface;
import com.academico.domain.entity.Aluno;
import com.academico.infrastructure.helper.DateHelper;
import static org.junit.Assert.*;

@RunWith(SpringRunner.class)
public class AlunoFacadeTest {

    @MockBean
    private AlunoServiceInterface alunoService;

    @Test
    public void testListarAlunos() {

        //Given
        List<Aluno> alunos = this.mockarAlunos();
        Mockito.when(alunoService.obterTodos()).thenReturn(alunos);

        //When
        List<Aluno> found = alunoService.obterTodos();
        
        //Then
        assertEquals("Os alunos n√£o foram encontrados mas deveriam", found.size(), 2);
    }

    private List<Aluno> mockarAlunos() {

        Aluno aluno1 = new Aluno();
        aluno1.setNome("Tiago Marques do Nascimento");
        aluno1.setCpf("10747586703");
        aluno1.setMatricula("1111");
        aluno1.setDataNascimento(DateHelper.stringToDate("1989-11-03"));
        aluno1.setDataMatricula(DateHelper.stringToDate("2020-01-01"));

        Aluno aluno2 = new Aluno();
        aluno2.setNome("Diogo Marques do Nascimento");
        aluno2.setCpf("20747586703");
        aluno2.setMatricula("1111");
        aluno2.setDataNascimento(DateHelper.stringToDate("1989-11-03"));
        aluno2.setDataMatricula(DateHelper.stringToDate("2020-01-01"));

        ArrayList<Aluno> alunos = new ArrayList<Aluno>();
        alunos.add(aluno1);
        alunos.add(aluno2);
        return alunos;
    }
}